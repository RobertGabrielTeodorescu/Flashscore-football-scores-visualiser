package utils;

import dto.MatchDto;
import entity.Match;
import service.TeamService;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.UUID;
import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

public class ApplicationUtils {

    public static String generateUUID(){
        return UUID.randomUUID().toString();
    }

    public static ArrayList<String> stringToArraylist(String string, String ragex){
        String[] elements = string.split(ragex);
        return new ArrayList<>(Arrays.asList(elements));
    }

    public static String arrayListToString(ArrayList<String> arrayList){
        StringBuilder string = new StringBuilder();
        for(String item : arrayList){
            string.append(item).append(" ");
        }
        return string.toString();
    }

    public static LocalDate stringToLocalDate(String date){
        DateTimeFormatter formatter=DateTimeFormatter.ofPattern("d-MM-yyyy");
        return LocalDate.parse(date,formatter);
    }

    public static void sendEmail(MatchDto matchDto,String email){
        String to = email;
        TeamService teamService=new TeamService();

        String from = "from@example.com";
        final String username = "2e50572ff638e0";//username generated by Mailtrap
        final String password = "8cf9e9c932141e";//password generated by Mailtrap

        String host = "smtp.mailtrap.io";

        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");//itâ€™s optional in Mailtrap
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.port", "2525");// use one of the options in the SMTP settings tab in your Mailtrap Inbox

        // Get the Session object.
        Session session = Session.getInstance(props,
                new javax.mail.Authenticator() {
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication(username, password);
                    }
                });

        try {
            // Create a default MimeMessage object.
            Message message = new MimeMessage(session);

            // Set From: header field
            message.setFrom(new InternetAddress(from));

            // Set To: header field
            message.setRecipients(Message.RecipientType.TO,
                    InternetAddress.parse(to));

            // Set Subject: header field
            message.setSubject("Match notification!");

            // Put the content of your message
            message.setText("Goal scored!"+"\n"+matchDto.getTeam1().getName()+" "+matchDto.getResult()+" "+ matchDto.getTeam2().getName());

            // Send message
            Transport.send(message);

            System.out.println("Sent message successfully....");

        } catch (MessagingException e) {
            throw new RuntimeException(e);
        }
    }

}
